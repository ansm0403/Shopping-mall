# 개발 환경 전용 Dockerfile (핫 리로드 지원)
FROM node:20-slim AS base
WORKDIR /app

# 네이티브 모듈 빌드를 위한 필수 패키지 설치
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

# Yarn v4 설치 및 설정
RUN corepack enable && corepack prepare yarn@4.10.3 --activate

# Stage 1: Dependencies 설치 (개발 의존성 포함)
FROM base AS deps
COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn ./.yarn

# yarn install 최적화 - 네이티브 모듈 빌드 설정
ENV YARN_CACHE_FOLDER=/tmp/yarn-cache
RUN mkdir -p $YARN_CACHE_FOLDER && \
    yarn config set enableGlobalCache false && \
    yarn install --network-timeout 1000000

# Stage 2: Development environment
FROM base AS development
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# 개발용 포트 노출 (백엔드: 3000, 프론트엔드: 3001)
EXPOSE 3000 3001

# 개발 서버 실행을 위한 스크립트
CMD ["yarn", "nx", "run-many", "--target=serve", "--all", "--parallel"]


